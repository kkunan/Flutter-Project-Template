// Mocks generated by Mockito 5.3.0 from annotations
// in oic_next_to_you/test/features/auth/domain/usecases/request_otp_with_phone_number_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:oic_next_to_you/common/core/app_response.dart' as _i2;
import 'package:oic_next_to_you/common/domain/entities/user/user.dart' as _i5;
import 'package:oic_next_to_you/features/auth/domain/repositories/otp_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAppResponse_0<T> extends _i1.SmartFake
    implements _i2.AppResponse<T> {
  _FakeAppResponse_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [OtpRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockOtpRepository extends _i1.Mock implements _i3.OtpRepository {
  MockOtpRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AppResponse<bool>> requestOtpWithPhoneNumber(
          {String? phoneNumber}) =>
      (super.noSuchMethod(Invocation.method(#requestOtpWithPhoneNumber, [], {#phoneNumber: phoneNumber}),
          returnValue: _i4.Future<_i2.AppResponse<bool>>.value(
              _FakeAppResponse_0<bool>(
                  this,
                  Invocation.method(#requestOtpWithPhoneNumber, [], {
                    #phoneNumber: phoneNumber
                  })))) as _i4.Future<_i2.AppResponse<bool>>);
  @override
  _i4.Future<_i2.AppResponse<_i5.User>> verifyOtpAndGetUser(
          {String? phoneNumber, String? otp}) =>
      (super.noSuchMethod(Invocation.method(#verifyOtpAndGetUser, [], {#phoneNumber: phoneNumber, #otp: otp}),
          returnValue: _i4.Future<_i2.AppResponse<_i5.User>>.value(
              _FakeAppResponse_0<_i5.User>(
                  this,
                  Invocation.method(#verifyOtpAndGetUser, [], {
                    #phoneNumber: phoneNumber,
                    #otp: otp
                  })))) as _i4.Future<_i2.AppResponse<_i5.User>>);
}
